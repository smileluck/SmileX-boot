server:
  port: 8080
  servlet:
    context-path: /smilex
  undertow:
    threads:
      io: 2
      worker: 64
spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # mysql 连接信息
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/smilex-boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
      username: root
      password: 123456
      # 其它配置
      keep-alive: true
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      #      init-exception-throw: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      stat-view-servlet:
        enabled: true
        allow: 127.0.0.1
        url-pattern: /druid/*
  # redis
  redis:
    database: 0
    host: 127.0.0.1
    password:
    port: 6379
    timeout: 5000
    lettuce:
      pool:
        max-active: 50
        min-idle: 5
        max-idle: 8
        max-wait: 3000ms
        time-between-eviction-runs: 1



logging:
  level:
    top.zsmile: debug
    tk.mybatis.simple.mapper: trace

knife4j:
  # 开启增强
  enable: true
  # 开启生产环境保护
  production: false
  # 开启Swagger的Basic认证功能,默认是false
  basic:
    enable: false
    # Basic认证用户名
    username: knifeAdmin
    # Basic认证密码
    password: knifeAdmin



# smilex-config
smilex:
  github:
    webhook:
      secret: ??
  server:
    workerId: 1
    dataCenterId: 1
  upload:
    # local 本地, oss 阿里云OSS, minio
    type: local
    # 保存路径
    path:
      local:
    oss:
      accessKey: ??
      secretKey: ??
      endpoint: ??
      bucketName: SmileX
    minio:
      minioUrl: ??
      minioName: ??
      minioPass: ??
      bucketName: SmileX
  #多租户配置
  tenant:
    #多租户增强
    enhance: true
    #动态数据源功能
    dynamic-datasource: false
    #动态数据源全局扫描
    dynamic-global: false
    #多租户字段名
    column: tenant_id
    #排除多租户逻辑
    exclude-tables:
      - sys_user