server:
  port: 8081
  servlet:
    context-path: /smilex
spring:
  mvc:
    static-path-pattern: /static/**
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  jta:
    atomikos:
      properties:
        log-base-dir: classpath:txlog
        log-base-name: tmlog
        enable-logging: true
  datasource:
    type: com.alibaba.druid.pool.xa.DruidXADataSource
    druid:
      # 连接池监控
      stat-view-servlet:
        enabled: true
        loginUsername: druidAdmin
        loginPassword: druidAdmin
        allow: 127.0.0.1
        url-pattern: /druid/*
      # web Url 结案空
      web-stat-filter:
        enabled: true
    dynamic:
      druid: # 全局druid参数，绝大部分值和默认保持一致。(现已支持的参数如下,不清楚含义不要乱设置)
        # 连接池的配置信息
        # 初始化大小，最小，最大
        keep-alive: true
        initial-size: 5
        min-idle: 5
        max-active: 20
        # 配置获取连接等待超时的时间
        max-wait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 1 FROM DUAL
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: true
        #      init-exception-throw: true
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      datasource:
        master:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/smilex-boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
          username: root
          password: root
  freemarker:
    suffix: .html
    template-loader-path: classpath:/templates/

# mybatis-plus
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  global-config:
    banner: false
    db-config:
      #主键类型  0:"数据库ID自增",1:"该类型为未设置主键类型", 2:"用户输入ID",3:"全局唯一ID (数字类型唯一ID)", 4:"全局唯一ID UUID",5:"字符串全局唯一ID (idWorker 的字符串表示)";
      id-type: ASSIGN_ID
      logic-delete-field: del_flag
      logic-delete-value: 1
      logic-not-delete-value: 0
      table-underline: true
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 返回类型为Map,显示null对应的字段
    call-setters-on-nulls: true


# Shiro
shiro:
  cookie:
    # 设置密钥，务必保持唯一性（生成方式，直接拷贝到main运行即可）KeyGenerator keygen = KeyGenerator.getInstance("AES"); SecretKey deskey = keygen.generateKey(); System.out.println(Base64.encodeToString(deskey.getEncoded()));
    cipherKey: zSyK5Kp6PZAAjlT+eeNMlg==



# smilex-config
smilex:
  server:
    workerId: 1
    dataCenterId: 1
  upload:
    # Local 本地, oss 阿里云OSS, minio
    type: local
    oss:
      accessKey: ??
      secretKey: ??
      endpoint: ??
      bucketName: SmileX
    minio:
      minioUrl: ??
      minioName: ??
      minioPass: ??
      bucketName: SmileX
